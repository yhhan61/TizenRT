###########################################################################
#
# Copyright 2016 Samsung Electronics All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific
# language governing permissions and limitations under the License.
#
###########################################################################
############################################################################
# arch/arm/src/bcm2835/Make.defs
#
#   Copyright (C) 2013-2014 Gregory Nutt. All rights reserved.
#   Author: Gregory Nutt <gnutt@nuttx.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name Gregory Nutt nor the names of its contributors may be
#    used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
############################################################################

# The vector table is the "head" object, i.e., the one that must forced into
# the link in order to draw in all of the other components

HEAD_ASRC  = arm_vectortab.S

ifeq ($(CONFIG_BUILD_KERNEL),y)
STARTUP_OBJS = crt0$(OBJEXT)
endif

# Force the start-up logic to be at the beginning of the .text to simplify
# debug.

ifeq ($(CONFIG_PAGING),y)
CMN_ASRCS  = arm_pghead.S
else
CMN_ASRCS  = arm_head.S
endif

# Common assembly language files

CMN_ASRCS += arm_vectors.S arm_fullcontextrestore.S
CMN_ASRCS += arm_saveusercontext.S arm_vectoraddrexcptn.S arm_vfork.S

# Common C source files

CMN_CSRCS  = up_initialize.c up_interruptcontext.c up_exit.c
CMN_CSRCS += up_createstack.c up_releasestack.c up_usestack.c up_vfork.c
CMN_CSRCS += up_puts.c up_mdelay.c up_stackframe.c up_udelay.c
CMN_CSRCS += up_modifyreg8.c up_modifyreg16.c up_modifyreg32.c up_allocateheap.c
CMN_CSRCS += arm_assert.c arm_blocktask.c arm_copyfullstate.c arm_dataabort.c
CMN_CSRCS += arm_doirq.c arm_initialstate.c arm_prefetchabort.c
CMN_CSRCS += arm_releasepending.c arm_reprioritizertr.c
CMN_CSRCS += arm_schedulesigaction.c arm_sigdeliver.c arm_syscall.c
CMN_CSRCS += arm_unblocktask.c arm_undefinedinsn.c arm_cacheops.c
CMN_CSRCS += up_checkstack.c

# Configuration dependent C files
ifeq ($(CONFIG_BUILD_KERNEL),y)
CMN_CSRCS += up_task_start.c up_pthread_start.c
endif

ifneq ($(CONFIG_SCHED_TICKLESS),y)
CHIP_CSRCS += bcm2835_timer.c
endif

CHIP_CSRCS += bcm2835_boot.c bcm2835_irq.c
CHIP_CSRCS += bcm2835_serial.c
CHIP_CSRCS += bcm2835_mac.c
CHIP_CSRCS += bcm2835_systemreset.c
CHIP_CSRCS += bcm2835_propertytags.c
ifeq ($(CONFIG_BCM2835_WATCHDOG),y)
CHIP_CSRCS += bcm2835_watchdog.c
endif

ifeq ($(CONFIG_ARCH_USE_MMU),y)
CHIP_CSRCS += bcm2835_mmu.c 
endif

CHIP_CSRCS += bcm2835_gpio.c
ifeq ($(CONFIG_GPIO),y)
CHIP_CSRCS += bcm2835_gpio_lowerhalf.c
endif

ifeq ($(CONFIG_BCM2835_SPI),y)
CHIP_CSRCS += bcm2835_spi.c
endif

ifeq ($(CONFIG_BCM2835_ADC),y)
CHIP_CSRCS += bcm2835_adc.c
endif

ifeq ($(CONFIG_BCM2835_I2C),y)
CHIP_CSRCS += bcm2835_i2c.c
endif


ifeq ($(CONFIG_ARCH_IDLE_CUSTOM),y)
CHIP_CSRCS += s5j_idle.c
else
CMN_CSRCS += up_idle.c
endif

ifeq ($(CONFIG_PM),y)
CHIP_CSRCS += bcm2835_pminitialize.c
CHIP_CSRCS += bcm2835_pmstandby.c bcm2835_pmstop.c
endif

ifeq ($(CONFIG_BCM2835_PWR),y)
CHIP_CSRCS += bcm2835_pwr.c
CHIP_CSRCS += bcm2835_pwrcal.c
endif

ifeq ($(CONFIG_BCM2835_PWM),y)
CHIP_CSRCS += bcm2835_pwm.c
endif

ifeq ($(CONFIG_RTC),y)
CHIP_CSRCS += bcm2835_rtc.c
ifeq ($(CONFIG_RTC_DRIVER),y)
CHIP_CSRCS += bcm2835_rtc_lowerhalf.c
endif
endif

ifeq ($(CONFIG_BCM2835_DMA),y)
CHIP_CSRCS += bcm2835_dma.c
endif
